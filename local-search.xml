<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>阿里云数据库慢日志监控</title>
    <link href="/posts/21707fcd.html"/>
    <url>/posts/21707fcd.html</url>
    
    <content type="html"><![CDATA[<h2 id="阿里云数据慢日志监控"><a href="#阿里云数据慢日志监控" class="headerlink" title="阿里云数据慢日志监控"></a>阿里云数据慢日志监控</h2><h3 id="需求说明"><a href="#需求说明" class="headerlink" title="需求说明"></a>需求说明</h3><p>阿里云的RDS Redis Mongo云服务慢日志告警只能对接云监控，无法对接自有的监控系统，需要获取阿里云数据库慢日志相关数据并接入监控</p><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>需要开通阿里云SLS日志服务</p><p>阿里云RDS慢日志接入SLS：</p><p><a href="https://sls.console.aliyun.com/lognext/app/lens/redis&resource=/common-data-access">https://sls.console.aliyun.com/lognext/app/lens/redis&amp;resource=/common-data-access</a></p><p>阿里云Redis慢日志接入SLS：</p><p><a href="https://sls.console.aliyun.com/lognext/app/lens/redis&resource=/common-data-access">https://sls.console.aliyun.com/lognext/app/lens/redis&amp;resource=/common-data-access</a></p><p>阿里云Mongo慢日志接入SLS：</p><p><a href="https://help.aliyun.com/zh/sls/user-guide/enable-the-log-audit-feature">https://help.aliyun.com/zh/sls/user-guide/enable-the-log-audit-feature</a></p><p>开通后在对应控制台查看目标存储库相关sls project logstore信息</p><p><img src="/./images/%E9%98%BF%E9%87%8C%E4%BA%91%E6%95%B0%E6%8D%AE%E5%BA%93%E6%85%A2%E6%97%A5%E5%BF%97%E7%9B%91%E6%8E%A7/image-20241114151552275.png" alt="image-20241114151552275"></p><p>查看接入日志</p><p><img src="/./images/%E9%98%BF%E9%87%8C%E4%BA%91%E6%95%B0%E6%8D%AE%E5%BA%93%E6%85%A2%E6%97%A5%E5%BF%97%E7%9B%91%E6%8E%A7/image-20241114151742623.png" alt="image-20241114151742623"></p><h3 id="编写Exporter"><a href="#编写Exporter" class="headerlink" title="编写Exporter"></a>编写Exporter</h3><p>使用Prometheus go client，Aliyun Go SDK 查询对应慢日志情况并输出Metrices</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> main<br><br><span class="hljs-keyword">import</span> (<br><span class="hljs-string">&quot;fmt&quot;</span><br><span class="hljs-string">&quot;github.com/aliyun/alibaba-cloud-sdk-go/sdk&quot;</span><br><span class="hljs-string">&quot;github.com/aliyun/alibaba-cloud-sdk-go/sdk/auth/credentials&quot;</span><br><span class="hljs-string">&quot;github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests&quot;</span><br><span class="hljs-string">&quot;github.com/aliyun/alibaba-cloud-sdk-go/services/dds&quot;</span><br>r_kvstore <span class="hljs-string">&quot;github.com/aliyun/alibaba-cloud-sdk-go/services/r-kvstore&quot;</span><br><span class="hljs-string">&quot;github.com/aliyun/alibaba-cloud-sdk-go/services/rds&quot;</span><br>sls <span class="hljs-string">&quot;github.com/aliyun/aliyun-log-go-sdk&quot;</span><br><span class="hljs-string">&quot;github.com/prometheus/client_golang/prometheus&quot;</span><br><span class="hljs-string">&quot;github.com/prometheus/client_golang/prometheus/promhttp&quot;</span><br><span class="hljs-string">&quot;log&quot;</span><br><span class="hljs-string">&quot;net/http&quot;</span><br><span class="hljs-string">&quot;strconv&quot;</span><br><span class="hljs-string">&quot;time&quot;</span><br>)<br><br><span class="hljs-keyword">var</span> accessKeyID = <span class="hljs-string">&quot;xxx&quot;</span>     <span class="hljs-comment">//替换accessKeyID</span><br><span class="hljs-keyword">var</span> accessKeySecret = <span class="hljs-string">&quot;xxx&quot;</span> <span class="hljs-comment">//替换accessKeySecret</span><br><span class="hljs-keyword">var</span> region = <span class="hljs-string">&quot;cn-shanghai&quot;</span><br><span class="hljs-keyword">var</span> endpoint = <span class="hljs-string">&quot;cn-shanghai.log.aliyuncs.com&quot;</span><br><span class="hljs-keyword">var</span> queries = <span class="hljs-keyword">map</span>[<span class="hljs-type">string</span>]<span class="hljs-keyword">map</span>[<span class="hljs-type">string</span>]<span class="hljs-type">string</span>&#123;<br><span class="hljs-string">&quot;aliyun-product-data-xxx-cn-shanghai&quot;</span>: &#123; <span class="hljs-comment">//RDS Mysql 日志 修改sls 对应的Project</span><br><span class="hljs-string">&quot;slow_error_log&quot;</span>: <span class="hljs-string">&quot;* and not db_name: \&quot;\&quot; | select instance_id as description,db_type,db_name,avg(query_time) AS \&quot;query_time\&quot; ,count(query_sql) AS \&quot;count\&quot; GROUP BY instance_id,db_name,db_type&quot;</span>,<br>&#125;,<br><span class="hljs-string">&quot;nosql-xxx-cn-shanghai&quot;</span>: &#123; <span class="hljs-comment">//RDS Mongo Redis 日志 修改sls 对应的Project</span><br><span class="hljs-string">&quot;redis_slow_run_log&quot;</span>: <span class="hljs-string">&quot;* and command:* and not db: -1 | select instanceid as description,count(command) as count,avg(latency)/1000000 as query_time ,db as db_name group by instanceid,db&quot;</span>,<br><span class="hljs-string">&quot;mongo_slow_run_log&quot;</span>: <span class="hljs-string">&quot;* and audit_type : slowOp |select instanceid as \&quot;description\&quot;, db as \&quot;db_name\&quot;,avg(latency /1000) as \&quot;query_time\&quot;,count(command) as \&quot;count\&quot; group by instanceid,db&quot;</span>,<br>&#125;,<br><span class="hljs-comment">// 添加更多的项目和日志库及其自定义查询语句</span><br>&#125;<br><br><span class="hljs-keyword">var</span> (<br>alertEventMetric = prometheus.NewGaugeVec(<br>prometheus.GaugeOpts&#123;<br>Name: <span class="hljs-string">&quot;db_slow_logs_count&quot;</span>,<br>Help: <span class="hljs-string">&quot;db_slow_logs_count&quot;</span>,<br>&#125;,<br>[]<span class="hljs-type">string</span>&#123;<span class="hljs-string">&quot;db_name&quot;</span>, <span class="hljs-string">&quot;query_time&quot;</span>, <span class="hljs-string">&quot;db_type&quot;</span>, <span class="hljs-string">&quot;description&quot;</span>&#125;,<br>)<br>)<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">init</span><span class="hljs-params">()</span></span> &#123;<br><span class="hljs-comment">// Register custom metrics with Prometheus&#x27;s default registry.</span><br>prometheus.MustRegister(alertEventMetric)<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">getAliyunRdsName</span><span class="hljs-params">()</span></span> (maps <span class="hljs-keyword">map</span>[<span class="hljs-type">string</span>]<span class="hljs-type">string</span>) &#123;<br>config := sdk.NewConfig()<br>credential := credentials.NewAccessKeyCredential(accessKeyID, accessKeySecret)<br>client, err := rds.NewClientWithOptions(region, config, credential)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>log.Fatal(<span class="hljs-string">&quot;Aliyun new Client fail!&quot;</span>, err)<br><span class="hljs-keyword">return</span><br>&#125;<br>request := rds.CreateDescribeDBInstancesRequest()<br>request.Scheme = <span class="hljs-string">&quot;https&quot;</span><br>request.PageSize = requests.NewInteger(<span class="hljs-number">100</span>)<br>request.PageNumber = requests.NewInteger(<span class="hljs-number">1</span>)<br>response, err := client.DescribeDBInstances(request)<br>maps = <span class="hljs-built_in">make</span>(<span class="hljs-keyword">map</span>[<span class="hljs-type">string</span>]<span class="hljs-type">string</span>)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>log.Fatal(<span class="hljs-string">&quot;Aliyun get Rds fail!&quot;</span>, err)<br>&#125;<br><span class="hljs-keyword">for</span> _, v := <span class="hljs-keyword">range</span> response.Items.DBInstance &#123;<br>maps[v.DBInstanceId] = v.DBInstanceDescription<br>&#125;<br><span class="hljs-keyword">return</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">getAliyunRedisName</span><span class="hljs-params">()</span></span> (maps <span class="hljs-keyword">map</span>[<span class="hljs-type">string</span>]<span class="hljs-type">string</span>) &#123;<br>config := sdk.NewConfig()<br>credential := credentials.NewAccessKeyCredential(accessKeyID, accessKeySecret)<br>client, err := r_kvstore.NewClientWithOptions(region, config, credential)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>log.Fatal(<span class="hljs-string">&quot;Aliyun new Client fail!&quot;</span>, err)<br><span class="hljs-keyword">return</span><br>&#125;<br>request := r_kvstore.CreateDescribeInstancesRequest()<br>request.Scheme = <span class="hljs-string">&quot;https&quot;</span><br>request.PageSize = requests.NewInteger(<span class="hljs-number">100</span>)<br>request.PageNumber = requests.NewInteger(<span class="hljs-number">1</span>)<br>response, err := client.DescribeInstances(request)<br>maps = <span class="hljs-built_in">make</span>(<span class="hljs-keyword">map</span>[<span class="hljs-type">string</span>]<span class="hljs-type">string</span>)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>log.Fatal(<span class="hljs-string">&quot;Aliyun get Rds fail!&quot;</span>, err)<br>&#125;<br><span class="hljs-keyword">for</span> _, v := <span class="hljs-keyword">range</span> response.Instances.KVStoreInstance &#123;<br>maps[v.InstanceId] = v.InstanceName<br>&#125;<br><span class="hljs-keyword">return</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">getAliyunMongoName</span><span class="hljs-params">()</span></span> (maps <span class="hljs-keyword">map</span>[<span class="hljs-type">string</span>]<span class="hljs-type">string</span>) &#123;<br>config := sdk.NewConfig()<br>credential := credentials.NewAccessKeyCredential(accessKeyID, accessKeySecret)<br>client, err := dds.NewClientWithOptions(region, config, credential)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>log.Fatal(<span class="hljs-string">&quot;Aliyun new Client fail!&quot;</span>, err)<br><span class="hljs-keyword">return</span><br>&#125;<br>request := dds.CreateDescribeDBInstancesRequest()<br>request.Scheme = <span class="hljs-string">&quot;https&quot;</span><br>request.PageSize = requests.NewInteger(<span class="hljs-number">100</span>)<br>request.PageNumber = requests.NewInteger(<span class="hljs-number">1</span>)<br>response, err := client.DescribeDBInstances(request)<br>maps = <span class="hljs-built_in">make</span>(<span class="hljs-keyword">map</span>[<span class="hljs-type">string</span>]<span class="hljs-type">string</span>)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>log.Fatal(<span class="hljs-string">&quot;Aliyun get Rds fail!&quot;</span>, err)<br>&#125;<br><span class="hljs-keyword">for</span> _, v := <span class="hljs-keyword">range</span> response.DBInstances.DBInstance &#123;<br>maps[v.DBInstanceId] = v.DBInstanceDescription<br>&#125;<br><span class="hljs-keyword">return</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">getAliyunLogsClient</span><span class="hljs-params">()</span></span> (client sls.ClientInterface) &#123;<br>client = sls.CreateNormalInterface(endpoint, accessKeyID, accessKeySecret, <span class="hljs-string">&quot;&quot;</span>)<br><span class="hljs-keyword">return</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">getAliyunMysqlSlowLogsMetrics</span><span class="hljs-params">()</span></span> &#123;<br>alertEventMetric.Reset()<br>client := getAliyunLogsClient()<br><span class="hljs-comment">// 查询条件和时间范围</span><br>from := time.Now().Add(-time.Minute).Unix() <span class="hljs-comment">// 查询1分钟前的日志</span><br>to := time.Now().Unix()<br>rdsNames := getAliyunRdsName()<br>redisNames := getAliyunRedisName()<br>mongoNames := getAliyunMongoName()<br><span class="hljs-keyword">for</span> project, logstores := <span class="hljs-keyword">range</span> queries &#123;<br><span class="hljs-keyword">for</span> logstore, query := <span class="hljs-keyword">range</span> logstores &#123;<br><span class="hljs-comment">// 这里可以设置 limit 参数来控制返回的日志数量</span><br>resp, err := client.GetLogs(project, logstore, <span class="hljs-string">&quot;&quot;</span>, from, to, query, <span class="hljs-number">100</span>, <span class="hljs-number">0</span>, <span class="hljs-literal">true</span>)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>log.Fatalf(<span class="hljs-string">&quot;获取日志失败: %v&quot;</span>, err)<br>&#125;<br><span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(resp.Logs) != <span class="hljs-number">0</span> &#123;<br><span class="hljs-keyword">for</span> _, logEntry := <span class="hljs-keyword">range</span> resp.Logs &#123;<br>db_name := logEntry[<span class="hljs-string">&quot;db_name&quot;</span>]<br>query_time := logEntry[<span class="hljs-string">&quot;query_time&quot;</span>]<br>db_type := logEntry[<span class="hljs-string">&quot;db_type&quot;</span>]<br>description := rdsNames[logEntry[<span class="hljs-string">&quot;description&quot;</span>]]<br><span class="hljs-keyword">if</span> logstore == <span class="hljs-string">&quot;redis_slow_run_log&quot;</span> &#123;<br>db_type = <span class="hljs-string">&quot;redis&quot;</span><br>description = redisNames[logEntry[<span class="hljs-string">&quot;description&quot;</span>]]<br>&#125;<br><span class="hljs-keyword">if</span> logstore == <span class="hljs-string">&quot;mongo_slow_run_log&quot;</span> &#123;<br>db_type = <span class="hljs-string">&quot;mongo&quot;</span><br>description = mongoNames[logEntry[<span class="hljs-string">&quot;description&quot;</span>]]<br>&#125;<br>count, _ := strconv.ParseFloat(logEntry[<span class="hljs-string">&quot;count&quot;</span>], <span class="hljs-number">64</span>)<br>alertEventMetric.WithLabelValues(db_name, query_time, db_type, description).Set(count)<br>&#125;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>fmt.Println(<span class="hljs-string">&quot;nil&quot;</span>)<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-comment">// 执行日志查询</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br><span class="hljs-keyword">go</span> <span class="hljs-function"><span class="hljs-keyword">func</span><span class="hljs-params">()</span></span> &#123;<br><span class="hljs-keyword">for</span> &#123;<br>getAliyunMysqlSlowLogsMetrics()<br>time.Sleep(<span class="hljs-number">30</span> * time.Second) <span class="hljs-comment">// Query interval</span><br>&#125;<br>&#125;()<br>http.Handle(<span class="hljs-string">&quot;/metrics&quot;</span>, promhttp.Handler())<br>log.Println(<span class="hljs-string">&quot;Starting HTTP server on :8081&quot;</span>)<br>log.Fatal(http.ListenAndServe(<span class="hljs-string">&quot;:8081&quot;</span>, <span class="hljs-literal">nil</span>))<br>&#125;<br><br></code></pre></td></tr></table></figure><p>将代码中替换相应AK，SLS Project Logstore </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">编译</span><br>GOOS=linux GOARCH=amd64 go build<br></code></pre></td></tr></table></figure><h3 id="查看效果"><a href="#查看效果" class="headerlink" title="查看效果"></a>查看效果</h3><p><img src="/./images/%E9%98%BF%E9%87%8C%E4%BA%91%E6%95%B0%E6%8D%AE%E5%BA%93%E6%85%A2%E6%97%A5%E5%BF%97%E7%9B%91%E6%8E%A7/image-20241114152548782.png" alt="image-20241114152548782"></p><p>标签：</p><p>db_name ：数据库名</p><p>query_time ：平均执行时间</p><p>db_type：数据库类型(Mongo,Redis,Mysql)</p><p>description：数据库实例名</p><p>指标值：慢日志数量(count)</p><h3 id="配置告警"><a href="#配置告警" class="headerlink" title="配置告警"></a>配置告警</h3><p>告警规则：db_slow_logs_count &gt; xxx</p><p>可根据实际需求添加</p><h3 id="对接Grafana"><a href="#对接Grafana" class="headerlink" title="对接Grafana"></a>对接Grafana</h3><p>可使用Grafana对日志进行展示查询，方便告警后查看</p><p>Grafana安装阿里云SLS插件：</p><p><a href="https://help.aliyun.com/zh/sls/developer-reference/connect-log-service-to-grafana">https://help.aliyun.com/zh/sls/developer-reference/connect-log-service-to-grafana</a></p><p>效果：</p><p><img src="/./images/%E9%98%BF%E9%87%8C%E4%BA%91%E6%95%B0%E6%8D%AE%E5%BA%93%E6%85%A2%E6%97%A5%E5%BF%97%E7%9B%91%E6%8E%A7/image-20241114153210408.png" alt="image-20241114153210408"></p><p><img src="/./images/%E9%98%BF%E9%87%8C%E4%BA%91%E6%95%B0%E6%8D%AE%E5%BA%93%E6%85%A2%E6%97%A5%E5%BF%97%E7%9B%91%E6%8E%A7/image-20241114153228528.png" alt="image-20241114153228528"></p>]]></content>
    
    
    <categories>
      
      <category>运维</category>
      
    </categories>
    
    
    <tags>
      
      <tag>监控</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Terraform 系列二 在AWS上创建EC2并自动挂载磁盘</title>
    <link href="/posts/4cc59e32.html"/>
    <url>/posts/4cc59e32.html</url>
    
    <content type="html"><![CDATA[<h2 id="Terraform-系列二-在AWS上创建EC2并自动挂载磁盘"><a href="#Terraform-系列二-在AWS上创建EC2并自动挂载磁盘" class="headerlink" title="Terraform 系列二 在AWS上创建EC2并自动挂载磁盘"></a>Terraform 系列二 在AWS上创建EC2并自动挂载磁盘</h2><p><img src="/./images/Terraform%20%E7%B3%BB%E5%88%97%E4%BA%8C%20%E5%9C%A8AWS%E4%B8%8A%E5%88%9B%E5%BB%BAEC2%E5%B9%B6%E8%87%AA%E5%8A%A8%E6%8C%82%E8%BD%BD%E7%A3%81%E7%9B%98/image-20241112170226186-1402147.png" alt="image-20241112170226186"></p><h3 id="需求说明"><a href="#需求说明" class="headerlink" title="需求说明"></a>需求说明</h3><p>在AWS上创建一台EC2，添加数据盘并自动挂载到&#x2F;opt&#x2F; 目录</p><h3 id="创建资源"><a href="#创建资源" class="headerlink" title="创建资源"></a>创建资源</h3><p>新建 variables.tf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs hcl">variable &quot;ec2_ami&quot; &#123;<br>  type        = string<br>  default     = &quot;ami-00f07845aed8c0ee7&quot; #Amazon Linux 2023 AMI 2023.5.20240819.0 x86_64 HVM kernel-6.1 不同region ami id不同，请参考当各个region<br>  description = &quot;ec2_ami&quot;<br>&#125;<br><br>#EC2 系统盘<br>variable &quot;ec2_root_disk_size&quot; &#123;<br>  type        = number<br>  default     = 50<br>  description = &quot;ec2_root_disk_size&quot;<br>&#125;<br>#EC2 数据盘<br>variable &quot;ec2_disk_size&quot; &#123;<br>  type        = number<br>  default     = 200<br>  description = &quot;ec2_disk_size&quot;<br>&#125;<br></code></pre></td></tr></table></figure><p>创建ssh-key</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh-keygen<br></code></pre></td></tr></table></figure><p>新建ec2.tf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><code class="hljs hcl"># 前置VPC等参考系列一<br># 创建 EC2 密钥对<br>resource &quot;aws_key_pair&quot; &quot;ec2_key&quot; &#123;<br>  key_name   = &quot;ec2_key&quot;<br>  public_key = &quot;xxxx&quot; 上面创建的ssh-key id_rsa<br>&#125;<br># 创建EC2 SSM IAM_ROLE<br>resource &quot;aws_iam_role&quot; &quot;iam_ssm_role&quot; &#123;<br>  name = &quot;ssm_role&quot;<br>  assume_role_policy = jsonencode(&#123;<br>    Version = &quot;2012-10-17&quot;,<br>    Statement = [<br>      &#123;<br>        Effect = &quot;Allow&quot;,<br>        Principal = &#123;<br>          Service = &quot;ec2.amazonaws.com&quot;<br>        &#125;,<br>        Action = &quot;sts:AssumeRole&quot;<br>      &#125;<br>    ]<br>  &#125;)<br>&#125;<br><br># SSM_POLICY绑定EC2 SSM_IAM<br>resource &quot;aws_iam_role_policy_attachment&quot; &quot;iam_ssm_role_policy&quot; &#123;<br>  role       = aws_iam_role.iam_ssm_role.name<br>  policy_arn  = &quot;arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore&quot;<br>&#125;<br># 创建 EC2_Profile<br>resource &quot;aws_iam_instance_profile&quot; &quot;ec2_ssm_profile&quot; &#123;<br>  name = &quot;ec2_ssm_profile&quot;<br>  role = aws_iam_role.iam_ssm_role.name<br>&#125;<br><br># 创建 EC2 实例<br>resource &quot;aws_instance&quot; &quot;ec2&quot; &#123;<br>  count                  = 3<br>  ami                    = var.ec2_ami  # 根据需要更改 AMI ID<br>  instance_type          = var.ec2_instance_type<br>  key_name               = aws_key_pair.ec2_key.key_name<br>  subnet_id              = element(<br>    [<br>      aws_subnet.vpc_subnet_private1.id,<br>      aws_subnet.vpc_subnet_private2.id<br>    ],<br>    count.index % 2<br>  )<br>  iam_instance_profile   = aws_iam_instance_profile.ec2_ssm_profile.name #绑定iam<br>  vpc_security_group_ids = [aws_security_group.security_group.id]<br><br>  root_block_device &#123;<br>    volume_size = var.ec2_root_disk_size<br>    volume_type = &quot;gp3&quot;<br>  &#125;<br><br>  # 挂载数据盘<br>  ebs_block_device &#123;<br>    device_name = &quot;/dev/xvdb&quot;<br>    volume_size = var.ec2_disk_size<br>    volume_type = &quot;gp3&quot;<br>  &#125;<br><br>  user_data = file(&quot;auto_disk.sh&quot;)<br><br>  tags = &#123;<br>    Name = &quot;ec2&quot;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>创建security_group.tf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs hcl"># 创建DB安全组<br>resource &quot;aws_security_group&quot; &quot;security_group&quot; &#123;<br>  name        = &quot;security_group&quot;<br>  description = &quot;security_group&quot;<br>  vpc_id      = aws_vpc.vpc.id<br>  ingress &#123;<br>    from_port   = 22<br>    to_port     = 22<br>    protocol    = &quot;tcp&quot;<br>    cidr_blocks = [&quot;0.0.0.0/0&quot;]  # 根据需要调整允许的IP范围<br>  &#125;<br>  egress &#123;<br>    from_port   = 0<br>    to_port     = 0<br>    protocol    = &quot;-1&quot;<br>    cidr_blocks = [&quot;0.0.0.0/0&quot;]<br>  &#125;<br><br>  tags = &#123;<br>    Name = &quot;security_group&quot;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>创建auto_disk.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><br><span class="hljs-comment"># 找到未挂载且没有分区的磁盘</span><br>DISK_NAME=$(lsblk -ndo NAME,TYPE | grep disk | awk <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span> | <span class="hljs-keyword">while</span> <span class="hljs-built_in">read</span> DISK; <span class="hljs-keyword">do</span><br>  <span class="hljs-keyword">if</span> ! lsblk /dev/<span class="hljs-variable">$DISK</span> | grep -q part; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;/dev/<span class="hljs-variable">$DISK</span>&quot;</span><br>  <span class="hljs-keyword">fi</span><br><span class="hljs-keyword">done</span> | <span class="hljs-built_in">head</span> -n 1)<br><br><span class="hljs-comment"># 如果没有找到磁盘，退出</span><br><span class="hljs-keyword">if</span> [ -z <span class="hljs-string">&quot;<span class="hljs-variable">$DISK_NAME</span>&quot;</span> ]; <span class="hljs-keyword">then</span><br>  <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;未找到未分区的磁盘。&quot;</span><br>  <span class="hljs-built_in">exit</span> 1<br><span class="hljs-keyword">fi</span><br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;找到未分区的磁盘: <span class="hljs-variable">$DISK_NAME</span>&quot;</span><br><br><span class="hljs-comment"># 创建新的分区</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;正在创建新的分区...&quot;</span><br>parted <span class="hljs-variable">$DISK_NAME</span> --script mklabel gpt<br>parted <span class="hljs-variable">$DISK_NAME</span> --script mkpart primary 0% 100%<br>partprobe <span class="hljs-variable">$DISK_NAME</span><br><br><span class="hljs-comment"># 获取新创建的分区名</span><br>PARTITION_NAME=$(<span class="hljs-built_in">ls</span> <span class="hljs-variable">$&#123;DISK_NAME&#125;</span>* | grep -E <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;DISK_NAME&#125;</span>p?[0-9]$&quot;</span> | <span class="hljs-built_in">head</span> -n 1)<br><br><span class="hljs-comment"># 格式化分区为 xfs 文件系统</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;正在格式化分区为 xfs 文件系统...&quot;</span><br>mkfs.xfs <span class="hljs-variable">$PARTITION_NAME</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;格式化完成。&quot;</span><br><br><span class="hljs-comment"># 创建挂载点并挂载到 /opt</span><br><span class="hljs-keyword">if</span> [ ! -d /opt ]; <span class="hljs-keyword">then</span><br>  <span class="hljs-built_in">mkdir</span> /opt<br><span class="hljs-keyword">fi</span><br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;挂载分区到 /opt...&quot;</span><br>mount <span class="hljs-variable">$PARTITION_NAME</span> /opt<br><br><span class="hljs-comment"># 设置开机自动挂载，编辑 /etc/fstab</span><br>UUID=$(blkid -s UUID -o value <span class="hljs-variable">$PARTITION_NAME</span>)<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;UUID=<span class="hljs-variable">$&#123;UUID&#125;</span> /opt xfs defaults,nofail 0 2&quot;</span> &gt;&gt; /etc/fstab<br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;挂载完成并设置自动挂载。&quot;</span><br><br></code></pre></td></tr></table></figure><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">terraform init<br><span class="hljs-meta prompt_"># </span><span class="language-bash">查看预期变更</span><br>terraform plan<br><span class="hljs-meta prompt_"># </span><span class="language-bash">生效变更</span><br>terraform apply<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>运维</category>
      
    </categories>
    
    
    <tags>
      
      <tag>terraform</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>夜莺Nightingale V5 通过Exporter实现告警升级</title>
    <link href="/posts/1e80028d.html"/>
    <url>/posts/1e80028d.html</url>
    
    <content type="html"><![CDATA[<h3 id="夜莺Nightingale-V5-通过Exporter实现告警升级"><a href="#夜莺Nightingale-V5-通过Exporter实现告警升级" class="headerlink" title="夜莺Nightingale V5 通过Exporter实现告警升级"></a>夜莺Nightingale V5 通过Exporter实现告警升级</h3><p><img src="/./images/%E5%A4%9C%E8%8E%BANightingale%20V5%20%E9%80%9A%E8%BF%87Exporter%E5%AE%9E%E7%8E%B0%E5%91%8A%E8%AD%A6%E5%8D%87%E7%BA%A7/image-20230808134528464.png" alt="nightingale"></p><p>由于夜莺监控没有告警升级这个功能，可以通过自定义exporter去夜莺数据库查询活跃告警暴露指标出来实现，代码如下</p><p><strong>夜莺版本：V5.15.0</strong></p><p><strong>开发环境：Golang1.18</strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> main<br><br><span class="hljs-keyword">import</span> (<br><span class="hljs-string">&quot;database/sql&quot;</span><br>_ <span class="hljs-string">&quot;github.com/go-sql-driver/mysql&quot;</span><br><span class="hljs-string">&quot;github.com/prometheus/client_golang/prometheus&quot;</span><br><span class="hljs-string">&quot;github.com/prometheus/client_golang/prometheus/promhttp&quot;</span><br><span class="hljs-string">&quot;log&quot;</span><br><span class="hljs-string">&quot;net/http&quot;</span><br><span class="hljs-string">&quot;strconv&quot;</span><br><span class="hljs-string">&quot;time&quot;</span><br>)<br><br><span class="hljs-keyword">var</span> (<br>alertEventMetric = prometheus.NewGaugeVec(<br>prometheus.GaugeOpts&#123;<br>Name: <span class="hljs-string">&quot;alert_event_trigger_time&quot;</span>,<br>Help: <span class="hljs-string">&quot;Trigger time of the alert events in UNIX timestamp&quot;</span>,<br>&#125;,<br>[]<span class="hljs-type">string</span>&#123;<span class="hljs-string">&quot;id&quot;</span>, <span class="hljs-string">&quot;cluster&quot;</span>, <span class="hljs-string">&quot;group_id&quot;</span>, <span class="hljs-string">&quot;severity&quot;</span>, <span class="hljs-string">&quot;description&quot;</span>, <span class="hljs-string">&quot;Group&quot;</span>, <span class="hljs-string">&quot;Region&quot;</span>&#125;, #此处标签根据业务实际情况添加<br>)<br>)<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">init</span><span class="hljs-params">()</span></span> &#123;<br><span class="hljs-comment">// Register custom metrics with Prometheus&#x27;s default registry.</span><br>prometheus.MustRegister(alertEventMetric)<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">queryDatabaseAndUpdateMetrics</span><span class="hljs-params">()</span></span> &#123;<br>dsn := <span class="hljs-string">&quot;xxx:xxx@tcp(xxxx:3306)/n9e_v5&quot;</span><br>db, err := sql.Open(<span class="hljs-string">&quot;mysql&quot;</span>, dsn)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>log.Fatalf(<span class="hljs-string">&quot;Failed to connect to MySQL: %v&quot;</span>, err)<br>&#125;<br><span class="hljs-keyword">defer</span> db.Close()<br><br><span class="hljs-comment">// Ensure the connection is valid.</span><br>err = db.Ping()<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>log.Fatalf(<span class="hljs-string">&quot;MySQL connection error: %v&quot;</span>, err)<br>&#125;<br><br><span class="hljs-comment">// Query the alert_cur_event table.</span><br>query := <span class="hljs-string">`SELECT id, cluster, group_id, severity, rule_name, trigger_time FROM alert_cur_event where severity &lt; 3;`</span><br><br>rows, err := db.Query(query)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>log.Fatalf(<span class="hljs-string">&quot;Failed to execute query: %v&quot;</span>, err)<br>&#125;<br><span class="hljs-keyword">defer</span> rows.Close()<br><br><span class="hljs-comment">// Clear existing metrics before updating.</span><br>alertEventMetric.Reset()<br>currentTime := time.Now().Unix()<br><span class="hljs-comment">// Iterate over the result set and update Prometheus metrics.</span><br><span class="hljs-keyword">for</span> rows.Next() &#123;<br><span class="hljs-keyword">var</span> id <span class="hljs-type">int</span><br><span class="hljs-keyword">var</span> cluster <span class="hljs-type">string</span><br><span class="hljs-keyword">var</span> groupID <span class="hljs-type">int</span><br><span class="hljs-keyword">var</span> severity <span class="hljs-type">int</span><br><span class="hljs-keyword">var</span> ruleName <span class="hljs-type">string</span><br><span class="hljs-keyword">var</span> triggerTime <span class="hljs-type">int64</span><br><span class="hljs-keyword">var</span> region <span class="hljs-type">string</span><br><br>err := rows.Scan(&amp;id, &amp;cluster, &amp;groupID, &amp;severity, &amp;ruleName, &amp;triggerTime)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>log.Printf(<span class="hljs-string">&quot;Error scanning row: %v&quot;</span>, err)<br><span class="hljs-keyword">continue</span><br>&#125;<br>region = <span class="hljs-string">&quot;告警升级&quot;</span><br><span class="hljs-keyword">var</span> metricValue <span class="hljs-type">float64</span><br><span class="hljs-keyword">if</span> currentTime-triggerTime &gt; <span class="hljs-number">8</span>*<span class="hljs-number">3600</span> &#123; <span class="hljs-comment">//8小时升级，可根据实际需求修改</span><br>metricValue = <span class="hljs-number">1</span> <span class="hljs-comment">// Indicates that the event is older than 8 hours.</span><br>&#125; <span class="hljs-keyword">else</span> &#123;<br>metricValue = <span class="hljs-number">0</span> <span class="hljs-comment">// Indicates that the event is within 8 hours.</span><br>&#125;<br><span class="hljs-comment">// Update the metric with label values.</span><br>alertEventMetric.WithLabelValues(<br>strconv.Itoa(id),<br>cluster,<br>strconv.Itoa(groupID),<br>strconv.Itoa(severity),<br>ruleName,<br>cluster,<br>region,<br>).Set(<span class="hljs-type">float64</span>(metricValue))<br>&#125;<br><br><span class="hljs-keyword">if</span> err = rows.Err(); err != <span class="hljs-literal">nil</span> &#123;<br>log.Fatalf(<span class="hljs-string">&quot;Error during rows iteration: %v&quot;</span>, err)<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br><span class="hljs-keyword">go</span> <span class="hljs-function"><span class="hljs-keyword">func</span><span class="hljs-params">()</span></span> &#123;<br><span class="hljs-keyword">for</span> &#123;<br>queryDatabaseAndUpdateMetrics()<br>time.Sleep(<span class="hljs-number">30</span> * time.Second) <span class="hljs-comment">// Query interval</span><br>&#125;<br>&#125;()<br><br>http.Handle(<span class="hljs-string">&quot;/metrics&quot;</span>, promhttp.Handler())<br>log.Println(<span class="hljs-string">&quot;Starting HTTP server on :8080&quot;</span>)<br>log.Fatal(http.ListenAndServe(<span class="hljs-string">&quot;:8080&quot;</span>, <span class="hljs-literal">nil</span>))<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>效果如下：</strong></p><p><img src="/./images/%E5%A4%9C%E8%8E%BANightingale%20V5%20%E9%80%9A%E8%BF%87Exporter%E5%AE%9E%E7%8E%B0%E5%91%8A%E8%AD%A6%E5%8D%87%E7%BA%A7/image-20241112152213563.png" alt="image-20241112152213563"></p><p>编译运行后prometheus添加该exporter，在夜莺中创建规则 0为正常告警 1为升级告警</p><p>alert_event_trigger_time &gt; 0</p><p>理论上可以修改代码中表名以及表字段兼容夜莺v6 或者v7</p>]]></content>
    
    
    <categories>
      
      <category>运维</category>
      
    </categories>
    
    
    <tags>
      
      <tag>监控</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Terraform 系列一 在AWS上创建VPC</title>
    <link href="/posts/6f066d48.html"/>
    <url>/posts/6f066d48.html</url>
    
    <content type="html"><![CDATA[<h2 id="Terraform-系列一-在AWS上创建VPC"><a href="#Terraform-系列一-在AWS上创建VPC" class="headerlink" title="Terraform 系列一 在AWS上创建VPC"></a>Terraform 系列一 在AWS上创建VPC</h2><p><img src="/./images/Terraform%20%E7%B3%BB%E5%88%97%E4%B8%80%20%E5%9C%A8AWS%E4%B8%8A%E5%88%9B%E5%BB%BAVPC/terraform-que-es-20241104141746764.png" alt="Terraform: Discover Its Benefits For Your Company Cloud"></p><h3 id="需求说明"><a href="#需求说明" class="headerlink" title="需求说明"></a>需求说明</h3><p>在AWS上创建VPC，VPC启用三个可用区，每个可用区包含Private，Public subnet各一个，一个NAT Gateway，一个Internet Gateway</p><h3 id="创建资源"><a href="#创建资源" class="headerlink" title="创建资源"></a>创建资源</h3><p>新建 variables.tf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs hcl">provider &quot;aws&quot; &#123;<br>  region = var.region<br>  access_key = var.access_key<br>  secret_key = var.secret_key<br>&#125;<br><br>variable &quot;region&quot; &#123; # 根据需要更改区域<br>  type        = string<br>  default     = &quot;xxx&quot;<br>  description = &quot;region&quot;<br>&#125;<br><br>variable &quot;access_key&quot; &#123;<br>  type        = string<br>  default     = &quot;xxx&quot;<br>  description = &quot;access_key&quot;<br>&#125;<br><br>variable &quot;secret_key&quot; &#123;<br>  type        = string<br>  default     = &quot;xxx&quot;<br>  description = &quot;secret_key&quot;<br>&#125;<br><br>variable &quot;vpc_cidr&quot; &#123;<br>  type        = string<br>  default     = &quot;10.0.0.0/16&quot;<br>  description = &quot;vpc &quot;<br>&#125;<br><br>variable &quot;vpc_subnet_public1_cidr&quot; &#123;<br>  type        = string<br>  default     = &quot;10.0.0.0/22&quot;<br>  description = &quot;vpc_subnet_public1_cidr&quot;<br>&#125;<br><br>variable &quot;vpc_subnet_public2_cidr&quot; &#123;<br>  type        = string<br>  default     = &quot;10.0.4.0/22&quot;<br>  description = &quot;vpc_subnet_public2_cidr&quot;<br>&#125;<br><br>variable &quot;vpc_subnet_private1_cidr&quot; &#123;<br>  type        = string<br>  default     = &quot;10.0.8.0/22&quot;<br>  description = &quot;vpc_subnet_private1_cidr&quot;<br>&#125;<br><br>variable &quot;vpc_subnet_private2_cidr&quot; &#123;<br>  type        = string<br>  default     = &quot;10.0.12.0/22&quot;<br>  description = &quot;vpc_subnet_private2_cidr&quot;<br>&#125;<br></code></pre></td></tr></table></figure><p>新建vpc.tf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><code class="hljs hcl"># 创建 VPC<br>resource &quot;aws_vpc&quot; &quot;vpc&quot; &#123;<br>  cidr_block           = var.vpc_cidr<br>  enable_dns_support   = true<br>  enable_dns_hostnames = true<br><br>  tags = &#123;<br>    Name = &quot;vpc&quot;<br>  &#125;<br>&#125;<br><br># 创建公有子网<br>resource &quot;aws_subnet&quot; &quot;vpc_subnet_public1&quot; &#123;<br>  vpc_id            = aws_vpc.vpc.id<br>  cidr_block        = var.vpc_subnet_public1_cidr<br>  availability_zone = format(&quot;%s%s&quot;, var.region, &quot;a&quot;)  # 根据需要更改可用区<br><br>  tags = &#123;<br>    Name = &quot;public_subnet_1a&quot;<br>  &#125;<br>&#125;<br><br>resource &quot;aws_subnet&quot; &quot;vpc_subnet_public2&quot; &#123;<br>  vpc_id            = aws_vpc.vpc.id<br>  cidr_block        = var.vpc_subnet_public2_cidr<br>  availability_zone = format(&quot;%s%s&quot;, var.region, &quot;b&quot;)  # 根据需要更改可用区<br><br>  tags = &#123;<br>    Name = &quot;public_subnet_2b&quot;<br>  &#125;<br>&#125;<br><br># 创建私有子网<br>resource &quot;aws_subnet&quot; &quot;vpc_subnet_private1&quot; &#123;<br>  vpc_id            = aws_vpc.vpc.id<br>  cidr_block        = var.vpc_subnet_private1_cidr<br>  availability_zone = format(&quot;%s%s&quot;, var.region, &quot;a&quot;)  # 根据需要更改可用区<br><br>  tags = &#123;<br>    Name = &quot;private_subnet_2a&quot;<br>  &#125;<br>&#125;<br><br>resource &quot;aws_subnet&quot; &quot;vpc_subnet_private2&quot; &#123;<br>  vpc_id            = aws_vpc.vpc.id<br>  cidr_block        = var.vpc_subnet_private2_cidr<br>  availability_zone = format(&quot;%s%s&quot;, var.region, &quot;b&quot;)  # 根据需要更改可用区<br><br>  tags = &#123;<br>    Name = &quot;private_subnet_2b&quot;<br>  &#125;<br>&#125;<br><br># 创建互联网网关<br>resource &quot;aws_internet_gateway&quot; &quot;vpc_internet_gateway&quot; &#123;<br>  vpc_id = aws_vpc.vpc.id<br><br>  tags = &#123;<br>    Name = &quot;igw&quot;<br>  &#125;<br>&#125;<br><br># 创建 NAT 网关的弹性 IP<br>resource &quot;aws_eip&quot; &quot;vpc_nat_eip&quot; &#123;<br>  domain = &quot;vpc&quot;<br>  depends_on = [<br>    aws_internet_gateway.vpc_internet_gateway<br>  ]<br>&#125;<br><br># 创建 NAT 网关<br>resource &quot;aws_nat_gateway&quot; &quot;vpc_nat_gateway&quot; &#123;<br>  allocation_id = aws_eip.vpc_nat_eip.id<br>  subnet_id     = aws_subnet.vpc_subnet_public1.id  # 公有子网中的任意一个<br>  <br>  tags = &#123;<br>    Name = &quot;nat_gateway&quot;<br>  &#125;<br>&#125;<br><br># 创建公有子网路由表<br>resource &quot;aws_route_table&quot; &quot;vpc_public_router_table&quot; &#123;<br>  vpc_id = aws_vpc.vpc.id<br><br>  route &#123;<br>    cidr_block = &quot;0.0.0.0/0&quot;<br>    gateway_id = aws_internet_gateway.vpc_internet_gateway.id<br>  &#125;<br><br>  tags = &#123;<br>    Name = &quot;public_route_table&quot;<br>  &#125;<br>&#125;<br><br># 将公有子网关联到公有子网路由表<br>resource &quot;aws_route_table_association&quot; &quot;public_subnet_1&quot; &#123;<br>  subnet_id      = aws_subnet.vpc_subnet_public1.id<br>  route_table_id = aws_route_table.vpc_public_router_table.id<br>&#125;<br><br>resource &quot;aws_route_table_association&quot; &quot;public_subnet_2&quot; &#123;<br>  subnet_id      = aws_subnet.vpc_subnet_public2.id<br>  route_table_id = aws_route_table.vpc_public_router_table.id<br>&#125;<br><br># 创建私有子网路由表<br>resource &quot;aws_route_table&quot; &quot;vpc_private_router_table&quot; &#123;<br>  vpc_id = aws_vpc.vpc.id<br><br>  route &#123;<br>    cidr_block     = &quot;0.0.0.0/0&quot;<br>    nat_gateway_id = aws_nat_gateway.vpc_nat_gateway.id<br>  &#125;<br><br>  tags = &#123;<br>    Name = &quot;private_route_table&quot;<br>  &#125;<br>&#125;<br><br># 将私有子网关联到私有子网路由表<br>resource &quot;aws_route_table_association&quot; &quot;private_subnet_1&quot; &#123;<br>  subnet_id      = aws_subnet.vpc_subnet_private1.id<br>  route_table_id = aws_route_table.vpc_private_router_table.id<br>&#125;<br><br>resource &quot;aws_route_table_association&quot; &quot;private_subnet_2&quot; &#123;<br>  subnet_id      = aws_subnet.vpc_subnet_private2.id<br>  route_table_id = aws_route_table.vpc_private_router_table.id<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">terraform init<br><span class="hljs-meta prompt_"># </span><span class="language-bash">查看预期变更</span><br>terraform plan<br><span class="hljs-meta prompt_"># </span><span class="language-bash">生效变更</span><br>terraform apply<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>运维</category>
      
    </categories>
    
    
    <tags>
      
      <tag>terraform</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>kafka批量修改Topic副本</title>
    <link href="/posts/aed030e0.html"/>
    <url>/posts/aed030e0.html</url>
    
    <content type="html"><![CDATA[<h2 id="Kafka-批量修改topic副本"><a href="#Kafka-批量修改topic副本" class="headerlink" title="Kafka 批量修改topic副本"></a>Kafka 批量修改topic副本</h2><h3 id="列出副本为1的topic"><a href="#列出副本为1的topic" class="headerlink" title="列出副本为1的topic"></a>列出副本为1的topic</h3><p>topic.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">topics=`/opt/server/kafka/bin/kafka-topics.sh --zookeeper 192.168.25.123:2181 -list`<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-variable">$topics</span>;<span class="hljs-keyword">do</span><br>  replicsNum=`/opt/server/kafka/bin/kafka-topics.sh --zookeeper 192.168.25.123:2181 -describe --topic <span class="hljs-variable">$i</span>|grep ReplicationFactor|awk <span class="hljs-string">&#x27;&#123;print$3&#125;&#x27;</span>|awk -F: <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span>`<br>  <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$replicsNum</span> == 1 ];<span class="hljs-keyword">then</span><br>     <span class="hljs-built_in">echo</span>  <span class="hljs-variable">$i</span> &gt;&gt; /opt/server/kafka/bin/topic.txt<br>  <span class="hljs-keyword">fi</span><br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><h3 id="leaders-txt"><a href="#leaders-txt" class="headerlink" title="leaders.txt"></a>leaders.txt</h3><p>填写broker id</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs txt">1<br>2<br>3<br></code></pre></td></tr></table></figure><h3 id="生成topic配置json"><a href="#生成topic配置json" class="headerlink" title="生成topic配置json"></a>生成topic配置json</h3><p>topic-reassignment.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br>ZK_HOST=<span class="hljs-string">&quot;192.168.25.123:2181&quot;</span><br><br>topics=`<span class="hljs-built_in">cat</span> ./topic.txt`<br><br>IFS=$<span class="hljs-string">&#x27;\n&#x27;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;&#123;&quot;version&quot;:1,&quot;partitions&quot;:[&#x27;</span> &gt; topic-reassignment.json<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-variable">$topics</span>;<span class="hljs-keyword">do</span><br>  <span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;write file for &#x27;</span><span class="hljs-variable">$i</span><span class="hljs-string">&#x27;&#x27;</span><br>  leaders=`./kafka-topics.sh --zookeeper <span class="hljs-variable">$ZK_HOST</span> -describe --topic <span class="hljs-variable">$i</span>|grep Leader`<br>  <span class="hljs-keyword">for</span> leader <span class="hljs-keyword">in</span> <span class="hljs-variable">$leaders</span>;<span class="hljs-keyword">do</span><br>    partition=`<span class="hljs-built_in">echo</span> <span class="hljs-variable">$leader</span> |awk <span class="hljs-string">&#x27;&#123;print $4&#125;&#x27;</span>`<br>    leader=`<span class="hljs-built_in">echo</span> <span class="hljs-variable">$leader</span> |awk <span class="hljs-string">&#x27;&#123;print $6&#125;&#x27;</span>`<br>    <span class="hljs-comment"># 如果需要保证 副分片 和 主分片 不在同一个 Broker 且随机分配在剩余的节点中，可以使用</span><br>    <span class="hljs-comment"># follwer=`grep -vxF $leader ./leaders.txt | shuf -n1`</span><br>    follwer=`grep -vxF <span class="hljs-variable">$leader</span> ./leaders.txt`<br>    follwer1=`<span class="hljs-built_in">echo</span> <span class="hljs-variable">$follwer</span> | awk <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span>`<br>    follwer2=`<span class="hljs-built_in">echo</span> <span class="hljs-variable">$follwer</span> | awk <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span>`<br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;&#123;&quot;topic&quot;:&quot;&#x27;</span><span class="hljs-variable">$i</span><span class="hljs-string">&#x27;&quot;,&quot;partition&quot;:&#x27;</span><span class="hljs-variable">$partition</span><span class="hljs-string">&#x27;,&quot;replicas&quot;:[&#x27;</span><span class="hljs-variable">$leader</span><span class="hljs-string">&#x27;,&#x27;</span><span class="hljs-variable">$follwer1</span><span class="hljs-string">&#x27;,&#x27;</span><span class="hljs-variable">$follwer2</span><span class="hljs-string">&#x27;]&#125;,&#x27;</span> &gt;&gt; topic-reassignment.json<br>  <span class="hljs-keyword">done</span><br><span class="hljs-keyword">done</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;]&#125;&#x27;</span> &gt;&gt; topic-reassignment.json<br></code></pre></td></tr></table></figure><h3 id="扩展副本"><a href="#扩展副本" class="headerlink" title="扩展副本"></a>扩展副本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./kafka-reassign-partitions.sh --zookeeper 192.168.25.123:2181 --reassignment-json-file topic-reassignment.json --execute<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>运维</category>
      
    </categories>
    
    
    <tags>
      
      <tag>kafka</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>夜莺Nightingale告警推送Jira</title>
    <link href="/posts/a503d6f5.html"/>
    <url>/posts/a503d6f5.html</url>
    
    <content type="html"><![CDATA[<h2 id="夜莺Nightingale告警推送Jira"><a href="#夜莺Nightingale告警推送Jira" class="headerlink" title="夜莺Nightingale告警推送Jira"></a>夜莺Nightingale告警推送Jira</h2><p><img src="/./images/%E5%A4%9C%E8%8E%BANightingale%E5%91%8A%E8%AD%A6%E6%8E%A8%E9%80%81Jira/image-20230808134528464.png" alt="nightingale"></p><p>最近收到个需求，在处理告警事件中，需要将一级告警推送Jira工单</p><p><strong>夜莺版本：V5.15.0</strong></p><p><strong>开发环境：Golang1.18</strong></p><h4 id="1、server-conf添加相关配置"><a href="#1、server-conf添加相关配置" class="headerlink" title="1、server.conf添加相关配置"></a>1、server.conf添加相关配置</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs conf">[Jira]<br># Enable<br>Enable = true<br># Jira 地址<br>Url = &quot;https://xxx.com/&quot;<br># Jira 账号<br>BasicAuthUser = &quot;xxx&quot;<br># Jira 密码<br>BasicAuthPass = &quot;xxx&quot;<br># Jira 项目名<br>ProjectName = &quot;xxx&quot;<br># Jira 项目ID<br>ProjectId = &quot;xxx&quot;<br># Issue类型<br>IssueType = &quot;xxx&quot;<br></code></pre></td></tr></table></figure><h4 id="2、-代码修改"><a href="#2、-代码修改" class="headerlink" title="2、 代码修改"></a>2、 代码修改</h4><p>修改src&#x2F;server&#x2F;config&#x2F;config.go</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs go">#添加jira 结构体<br><span class="hljs-keyword">type</span> Jira <span class="hljs-keyword">struct</span> &#123;<br>Enable        <span class="hljs-type">bool</span><br>Url           <span class="hljs-type">string</span><br>BasicAuthUser <span class="hljs-type">string</span><br>BasicAuthPass <span class="hljs-type">string</span><br>ProjectName   <span class="hljs-type">string</span><br>ProjectId     <span class="hljs-type">string</span><br>IssueType     <span class="hljs-type">string</span><br>&#125;<br>#在原有config结构体添加jira<br><span class="hljs-keyword">type</span> Config <span class="hljs-keyword">struct</span> &#123;<br>RunMode            <span class="hljs-type">string</span><br>ClusterName        <span class="hljs-type">string</span> <span class="hljs-comment">// 监控对象上报时，指定的集群名称</span><br>BusiGroupLabelKey  <span class="hljs-type">string</span><br>EngineDelay        <span class="hljs-type">int64</span><br>DisableUsageReport <span class="hljs-type">bool</span><br>ReaderFrom         <span class="hljs-type">string</span><br>LabelRewrite       <span class="hljs-type">bool</span><br>ForceUseServerTS   <span class="hljs-type">bool</span><br>Log                logx.Config<br>HTTP               httpx.Config<br>BasicAuth          gin.Accounts<br>SMTP               SMTPConfig<br>Heartbeat          HeartbeatConfig<br>Alerting           Alerting<br>NoData             NoData<br>Redis              storage.RedisConfig<br>DB                 ormx.DBConfig<br>WriterOpt          WriterGlobalOpt<br>Writers            []WriterOptions<br>Reader             PromOption<br>Readers            []PromOption<br>Ibex               Ibex<br>Jira               Jira<br>&#125;<br></code></pre></td></tr></table></figure><p> 在src&#x2F;server&#x2F;common&#x2F;sender&#x2F; 新建jira.go</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> sender<br><br><span class="hljs-keyword">import</span> (<br><span class="hljs-string">&quot;github.com/andygrunwald/go-jira&quot;</span><br><span class="hljs-string">&quot;github.com/didi/nightingale/v5/src/models&quot;</span><br><span class="hljs-string">&quot;github.com/didi/nightingale/v5/src/pkg/tplx&quot;</span><br><span class="hljs-string">&quot;github.com/didi/nightingale/v5/src/server/config&quot;</span><br><span class="hljs-string">&quot;github.com/toolkits/pkg/logger&quot;</span><br><span class="hljs-string">&quot;html/template&quot;</span><br><span class="hljs-string">&quot;io/ioutil&quot;</span><br><span class="hljs-string">&quot;path&quot;</span><br>)<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">JiraSender</span><span class="hljs-params">(ctx *models.AlertCurEvent)</span></span> &#123;<br>title := ctx.RuleName<br>tplpath := path.Join(config.C.Alerting.TemplatesDir, <span class="hljs-string">&quot;jira.tpl&quot;</span>)<br>tpl, err := template.New(<span class="hljs-string">&quot;jira.tpl&quot;</span>).Funcs(tplx.TemplateFuncMap).ParseFiles(tplpath)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>logger.Errorf(<span class="hljs-string">&quot;failed to parse tpl: &quot;</span> + tplpath)<br><span class="hljs-keyword">return</span><br>&#125;<br>message := BuildTplMessage(tpl, ctx)<br>auth := jira.BasicAuthTransport&#123;<br>Username: config.C.Jira.BasicAuthUser,<br>Password: config.C.Jira.BasicAuthPass,<br>&#125;<br>jiraClient, err := jira.NewClient(auth.Client(), config.C.Jira.Url)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>logger.Errorf(<span class="hljs-string">&quot;jira_sender: result=fail&quot;</span> + err.Error())<br><span class="hljs-keyword">return</span><br>&#125;<br>owner := ctx.GetTagValue(<span class="hljs-string">&quot;owner&quot;</span>)<br><span class="hljs-keyword">if</span> owner == <span class="hljs-string">&quot;&quot;</span> &#123;<br><span class="hljs-keyword">return</span><br>&#125;<br>issue := jira.Issue&#123;<br>Fields: &amp;jira.IssueFields&#123;<br>Assignee: &amp;jira.User&#123;<br>Name: owner,<br>&#125;,<br>Description: message,<br>Type: jira.IssueType&#123;<br>Name: config.C.Jira.IssueType,<br>&#125;,<br>Project: jira.Project&#123;<br>Name: config.C.Jira.ProjectName,<br>ID:   config.C.Jira.ProjectId,<br>&#125;,<br>Summary: title,<br>&#125;,<br>&#125;<br>_, res, err := jiraClient.Issue.Create(&amp;issue)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>response, err := ioutil.ReadAll(res.Body)<br>logger.Errorf(<span class="hljs-string">&quot;jira_sender: result=fail&quot;</span>, err, <span class="hljs-type">string</span>(response))<br><span class="hljs-keyword">return</span><br>&#125; <span class="hljs-keyword">else</span> &#123;<br>logger.Infof(<span class="hljs-string">&quot;jira_sender: result=succ %s: %+v&quot;</span>)<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>修改src&#x2F;server&#x2F;engine&#x2F;notify.go</p><p>在send中添加触发推送jira逻辑</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">if</span> config.C.Jira.Enable &amp;&amp; event.Severity == <span class="hljs-number">1</span> &amp;&amp; !event.IsRecovered &#123;<br>sender.JiraSender(event)<br>&#125;<br>#是否启用，告警级别是否为<span class="hljs-number">1</span>，告警状态为触发状态<br></code></pre></td></tr></table></figure><h4 id="3、添加jira工单模板"><a href="#3、添加jira工单模板" class="headerlink" title="3、添加jira工单模板"></a>3、添加jira工单模板</h4><p>创建 etc&#x2F;template&#x2F;jira.tpl</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs tpl">策略备注：&#123;&#123;.RuleNote&#125;&#125;<br>告警区域：&#123;&#123;.TagsMap.Region&#125;&#125;<br>&#123;&#123;if not .TargetIdent&#125;&#125;告警对象：&#123;&#123;.TargetNote&#125;&#125;&#123;&#123;.TagsMap.container&#125;&#125;&#123;&#123;.TagsMap.topic&#125;&#125;&#123;&#123;.TagsMap.description&#125;&#125;&#123;&#123;end&#125;&#125;<br>&#123;&#123;if .TargetIdent&#125;&#125;告警机器：&#123;&#123;.TargetIdent&#125;&#125; - &#123;&#123;.TargetNote&#125;&#125;&#123;&#123;end&#125;&#125;<br>触发时值：&#123;&#123;.TriggerValue&#125;&#125;<br>触发时间：&#123;&#123;timeformat .TriggerTime&#125;&#125;<br>事件ID：&#123;&#123;.Id&#125;&#125;<br></code></pre></td></tr></table></figure><h4 id="4、编译部署"><a href="#4、编译部署" class="headerlink" title="4、编译部署"></a>4、编译部署</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">go mod tidy<br>make<br>./n9e server<br></code></pre></td></tr></table></figure><h4 id="5、告警规则修改"><a href="#5、告警规则修改" class="headerlink" title="5、告警规则修改"></a>5、告警规则修改</h4><p>需要推送jira的告警规则需要添加附加标签，附加标签对应jira处理人，告警等级为一级告警</p><p><strong>标签为：owner&#x3D;”xxx”</strong></p><p><img src="/./images/%E5%A4%9C%E8%8E%BANightingale%E5%91%8A%E8%AD%A6%E6%8E%A8%E9%80%81Jira/image-20230808134357465.png" alt="image-20230808134357465"></p><h4 id="6、工单效果"><a href="#6、工单效果" class="headerlink" title="6、工单效果"></a>6、工单效果</h4><p><img src="/./images/%E5%A4%9C%E8%8E%BANightingale%E5%91%8A%E8%AD%A6%E6%8E%A8%E9%80%81Jira/image-20230808134832784.png" alt="image-20230808134832784"></p>]]></content>
    
    
    <categories>
      
      <category>运维</category>
      
    </categories>
    
    
    <tags>
      
      <tag>监控</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>kafka常用命令</title>
    <link href="/posts/fcfd194a.html"/>
    <url>/posts/fcfd194a.html</url>
    
    <content type="html"><![CDATA[<h2 id="kafka常用命令"><a href="#kafka常用命令" class="headerlink" title="kafka常用命令"></a>kafka常用命令</h2><p><img src="/./images/kafka%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/image-20230808113353843.png" alt="kafka"></p><h3 id="查看topic"><a href="#查看topic" class="headerlink" title="查看topic"></a>查看topic</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">kafka-topics.sh  --bootstrap-server xxx:9092 --list<br></code></pre></td></tr></table></figure><h3 id="创建topic"><a href="#创建topic" class="headerlink" title="创建topic"></a>创建topic</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">kafka-topics.sh --create  --bootstrap-server xxx:9092 --replication-factor 3 --partitions 3 --topic &lt;topic-name&gt;<br></code></pre></td></tr></table></figure><h3 id="查看指定topic"><a href="#查看指定topic" class="headerlink" title="查看指定topic"></a>查看指定topic</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">kafka-topics.sh --bootstrap-server xxx:9092 --describe --topic &lt;topic-name&gt;<br></code></pre></td></tr></table></figure><h3 id="删除指定topic"><a href="#删除指定topic" class="headerlink" title="删除指定topic"></a>删除指定topic</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">kafka-topics.sh --bootstrap-server xxx:9092 --delete --topic &lt;topic-name&gt;<br></code></pre></td></tr></table></figure><h3 id="扩展topic的partition数量"><a href="#扩展topic的partition数量" class="headerlink" title="扩展topic的partition数量"></a>扩展topic的partition数量</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">kafka-topics.sh --bootstrap-server xxx:9092 --topic &lt;topic-name&gt; --alter --partitions 30<br></code></pre></td></tr></table></figure><h3 id="修改topic的过期时间"><a href="#修改topic的过期时间" class="headerlink" title="修改topic的过期时间"></a>修改topic的过期时间</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">./kafka-configs.sh --zookeeper xxx:2181 --alter --entity-name &lt;topic-name&gt; --entity-type topics --add-config retention.ms=8640000<br></code></pre></td></tr></table></figure><h3 id="扩展topic每个partition的副本数量"><a href="#扩展topic每个partition的副本数量" class="headerlink" title="扩展topic每个partition的副本数量"></a>扩展topic每个partition的副本数量</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim xxx.json<br>&#123;&quot;version&quot;:1,<br>&quot;partitions&quot;:[<br>&#123;&quot;topic&quot;:&quot;&lt;topic-name&gt;&quot;,&quot;partition&quot;:0,&quot;replicas&quot;:[0,1,2]&#125;,<br>&#123;&quot;topic&quot;:&quot;&lt;topic-name&gt;&quot;,&quot;partition&quot;:1,&quot;replicas&quot;:[0,1,2]&#125;,<br>&#123;&quot;topic&quot;:&quot;&lt;topic-name&gt;&quot;,&quot;partition&quot;:2,&quot;replicas&quot;:[0,1,2]&#125;,<br>&#123;&quot;topic&quot;:&quot;&lt;topic-name&gt;&quot;,&quot;partition&quot;:3,&quot;replicas&quot;:[0,1,2]&#125;,<br>&#123;&quot;topic&quot;:&quot;&lt;topic-name&gt;&quot;,&quot;partition&quot;:4,&quot;replicas&quot;:[0,1,2]&#125;,<br>&#123;&quot;topic&quot;:&quot;&lt;topic-name&gt;&quot;,&quot;partition&quot;:5,&quot;replicas&quot;:[0,1,2]&#125;,<br>&#123;&quot;topic&quot;:&quot;&lt;topic-name&gt;&quot;,&quot;partition&quot;:6,&quot;replicas&quot;:[0,1,2]&#125;,<br>&#123;&quot;topic&quot;:&quot;&lt;topic-name&gt;&quot;,&quot;partition&quot;:7,&quot;replicas&quot;:[0,1,2]&#125;,<br>&#123;&quot;topic&quot;:&quot;&lt;topic-name&gt;&quot;,&quot;partition&quot;:8,&quot;replicas&quot;:[0,1,2]&#125;,<br>&#123;&quot;topic&quot;:&quot;&lt;topic-name&gt;&quot;,&quot;partition&quot;:9,&quot;replicas&quot;:[0,1,2]&#125;,<br>&#123;&quot;topic&quot;:&quot;&lt;topic-name&gt;&quot;,&quot;partition&quot;:10,&quot;replicas&quot;:[0,1,2]&#125;,<br>&#123;&quot;topic&quot;:&quot;&lt;topic-name&gt;&quot;,&quot;partition&quot;:11,&quot;replicas&quot;:[0,1,2]&#125;,<br>&#123;&quot;topic&quot;:&quot;&lt;topic-name&gt;&quot;,&quot;partition&quot;:12,&quot;replicas&quot;:[0,1,2]&#125;,<br>&#123;&quot;topic&quot;:&quot;&lt;topic-name&gt;&quot;,&quot;partition&quot;:13,&quot;replicas&quot;:[0,1,2]&#125;,<br>&#123;&quot;topic&quot;:&quot;&lt;topic-name&gt;&quot;,&quot;partition&quot;:14,&quot;replicas&quot;:[0,1,2]&#125;<br>]&#125;<br>kafka-reassign-partitions.sh --zookeeper xxx:2181 --reassignment-json-file  xxx.json --execute <br></code></pre></td></tr></table></figure><h3 id="查看topic数据大小"><a href="#查看topic数据大小" class="headerlink" title="查看topic数据大小"></a>查看topic数据大小</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs shell">kafka-log-dirs.sh \<br>  --bootstrap-server xx:9092 \<br>  --topic-list &lt;topic-name&gt; \<br>  --describe \<br>  | grep -oP &#x27;(?&lt;=size&quot;:)\d+&#x27;  \<br>  | awk &#x27;&#123; sum += $1 &#125; END &#123; print sum &#125;&#x27;<br><span class="hljs-meta prompt_">  </span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">返回结果，单位 Byte</span><br>648<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">方法二，需要安装 jq</span><br>kafka-log-dirs.sh \<br>    --bootstrap-server xxx:9092 \<br>    --topic-list &lt;topic-name&gt; \<br>    --describe \<br>  | grep &#x27;^&#123;&#x27; \<br>  | jq &#x27;[ ..|.size? | numbers ] | add&#x27;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">返回结果，单位 Byte</span><br>648<br></code></pre></td></tr></table></figure><h3 id="列出所有的consumer-group"><a href="#列出所有的consumer-group" class="headerlink" title="列出所有的consumer group"></a>列出所有的consumer group</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">kafka-consumer-groups.sh --bootstrap-server xxx:9092 --list<br></code></pre></td></tr></table></figure><h3 id="查看指定consumer-group详情"><a href="#查看指定consumer-group详情" class="headerlink" title="查看指定consumer group详情"></a>查看指定consumer group详情</h3><ul><li>GROUP:消费者 group</li><li>TOPIC:话题 id</li><li>PARTITION:分区 id</li><li>CURRENT-OFFSET:当前已消费的条数</li><li>LOG-END-OFFSET:总条数</li><li>LAG:未消费的条数</li><li>CONSUMER-ID:消费者 id</li><li>HOST:消费者 ip 地址</li><li>CLIENT-ID:客户端 id<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">kafka-consumer-groups.sh --bootstrap-server xxx:9092 --describe --group &lt;topic-name&gt;<br></code></pre></td></tr></table></figure></li></ul><h3 id="删除指定consumer-group"><a href="#删除指定consumer-group" class="headerlink" title="删除指定consumer group"></a>删除指定consumer group</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">kafka-consumer-groups.sh --bootstrap-server xxx:9092 --delete --group &#123;消费组&#125;<br></code></pre></td></tr></table></figure><h3 id="消费消息"><a href="#消费消息" class="headerlink" title="消费消息"></a>消费消息</h3><p>从头消费</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">kafka-console-consumer.sh --bootstrap-server xxx:9092 --topic &lt;topic-name&gt; --from-beginning<br>this is my topic<br></code></pre></td></tr></table></figure><p>从尾消费</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">kafka-console-consumer.sh --bootstrap-server 11.8.36.125:9092 --topic &lt;topic-name&gt;  --offset latest  --partition 0 1 2 <br></code></pre></td></tr></table></figure><h3 id="重置消费者offset"><a href="#重置消费者offset" class="headerlink" title="重置消费者offset"></a>重置消费者offset</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">kafka-consumer-groups.sh --bootstrap-server xxx:9092 --group my-consumer-group --reset-offsets --execute --to-offset 3 --topic transaction-topic-msg<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>运维</category>
      
    </categories>
    
    
    <tags>
      
      <tag>kafka</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
